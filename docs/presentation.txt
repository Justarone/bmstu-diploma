(разработка метода хранения данных с защитой от изменения и удаления)

2 слайд.

Цель - разработать метод блочного хранения данных с возможностью доказательства неправомерного доступа на основе хеш-сумм.

Для достижения цели требуется решить следующие задачи:
* рассмотреть базовые элементы и понятия предметной области;
* провести анализ существующих решений предметной области;
* разработать свой метод хранения;
* исследовать на предмет защищенности при различных условиях.

3 слайд.

Информация ограниченного доступа - это информация, условия хранения и защиты которой регулируются на законодательном уровне. К такой информации относятся:
* коммерческая тайна;
* персональные данные;
* служебная тайна;
* секрет производства.

Число утечек информации увеличивается с 2006 года, все бОльшая доля утечек происходит через сеть, в связи с чем ужесточается регулирование в сфере информационной безопасности со стороны государств. В данной работе рассматривается защита от изменения и удаления данных.

4 слайд.

Локальные методы:

КФС - файловая система, которая обладает дополнительным слоем шифрования данных. Некоторые такие системы реализованы на уровне виртуальной файловой системы, поддерживая интерфейс обычных файловых систем.

Git - система контроля версий. Хранилище объектов внутри Git в формате ключ значение. В качестве ключей выступают хеш-суммы от содержимого блоков данных. Иерархия связей поддерживается с помощью хранения хеш-сумм дочерних элементов в содержимом блока. Обновление происходит через добавление нового объекта. Если при обращении к объекту обнаруживается несовпадение имени и хеш-суммы содержимого, данные считаются несогласованными.

5 слайд.

Распределенные методы:

PASIS - выделяет 2 концепта:
1. при записи блок данных делится на некоторое количество фрагментов (допустим 6) и записывается на соответствующее количество узлов. При чтении достаточно некоторого подмножества фрагментов (например, 3) для восстановления блока данных целиком.
2. Валидация блока происходит через кросс хеш-суммы - конкатенация хеш-сумм фрагментов.

OceanStore дополняет концепцию PASIS:
1. используется адресация по содержимому, аналогично Git.
2. для валидации используется дерево Меркла от фрагментов.
3. вместе с фрагментами хранится доказательство Меркла, позволяющее валидировать их по отдельности.

Bitcoin - одноранговая распределенная денежная система.
1. транзакции защищены с помощью инфраструкуры публичных ключей: подписываются секретным ключом владельца кошелька-отправителя.
2. набор транзакций в блоке защищен с помощью дерева Меркла: корень дерева Меркла на основе всех транзакций хранится в заголовке блока.
3. блоки защищены блокчейном: в заголовке очередного блока хранится хеш-сумма заголовка предыдущего блока.
4. добавление блоков в блокчейн регулируется концепцией proof-of-work: для добавления блока требуется проделать некоторую вычислительную работу, в связи с чем сломать систему можно обладая только большинством вычислительных ресурсов.

6 слайд.

Защита от неправомерного доступа разделена на 3 категории:
1. исключение доступа
2. возможность восстановления последствий неправомерного доступа
3. возможность доказательства неправомерного доступа

7 слайд.

Анализ существующих решений на предмет защиты от неправомерного доступа:
1. КФС исключает чтение для пользователей, которые не владеют ключом
2. PASIS и OceanStore обладают возможностью восстановления после частичного удаления или изменения, а также возможностью доказательства неправомерного изменения
3. Bitcoin исключает изменение и удаление данных.
4. Git обладает возможностью доказательства неправомерного изменения/удаления, однако защита легко обходится, злоумышленник повторит действия системы при изменении данных.

8 слайд.

При анализе хранения в СУБД выделяются следующие требования:
* блочное хранение данных;
* наличие возможности реализации метода.

СУБД с блочным хранением - первые 2 закрыты, ClickHouse открыт, в подсистеме MergeTree есть блочное хранение и возможность для реализации метода.

9 слайд.

На слайде можно увидеть структуру хранения данных в СУБД ClickHouse в подсистеме хранения MergeTree, в рамках данной работы важно понятие звена - блока, являющегося единицей хранения информации.

10 слайд.

*текст со слайда* +
при слияниях и мутациях атомарность операций используется за счет использования версий и покрывания: блоки с большей версией покрывают блоки с меньшей. Таким образом сразу после переименования блоки с меньшей версией не могут использоваться.

11 слайд.

без шифрования система имеет возможность доказательства изменений, с шифрованием присутствует защита от чтения и возможность доказательства изменений. Можно заметить, что отсутствует возможность доказательства удаления блока.

с учетом рассмотренных ранее операций изменение состояния набора звеньев происходит в одном месте - при переименовании звена в ФС.

12 слайд.

на слайде представлена функциональная модель изменения данных в разрабатываемом методе, то есть описан процесс изменения данных

коротко можно описать следующим образом: изначально происходит проверка валидности состояния, затем расчет нового состояния звеньев, после этого расчет хеш-сумм для нового состояния с записью в журнал, затем переход к новому состоянию и запись в файл значение цепи хеш-сумм для нового состояния

13 слайд.

На слайде описаны возможные сценарии угроз, а так же признаки их обнаружения и возможные пути обхода защиты при отсутствии шифрования. Также представлены выражения для расчета цепи хеш-сумм.

14 слайд.

На слайде представлены схемы 3 алгоритмов: обновления состава звеньев, расчета цепи хеш-сумм и валидации цепи хеш-сумм. Серым в схемах выделены части старого алгоритма.

15 слайд.

На слайде показана схема обхода защиты при отсутствии шифрования. Данные шаги были проделаны в рамках исследования на уровне файлов c данными в бинарном виде и согласованность данных была восстановлена после неправомерного изменения. Это показывает необходимость шифрования для сохранения возможности доказательства неправомерных изменения и удаления блоков.

16 слайд.

В результате выполнения работы цель была достигнута, а также решены все задачи.

17 слайд.

В качестве дальнейшего развития можно реализовать подобный метод для подсистемы хранения ReplicatedMergeTree, а также усовершенствовать его, добавив возможность восстановления при частичных удалении или изменении.
